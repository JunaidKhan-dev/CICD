include:
  - template: Terraform.latest.gitlab-ci.yml

variables: 
  DOCKER_REGISTRY: 374930370820.dkr.ecr.eu-west-1.amazonaws.com
  AWS_DEFAULT_REGION: eu-west-1
  APP_NAME: simple-node-image
  DOCKER_HOST: tcp://docker:2375
  TF_IN_AUTOMATION: "true"
  TF_STATE_NAME: simple-state
  TF_CACHE_KEY: simple-state
  TF_DEPLOY_BRANCH: main

image-on-ecr:
  stage: .pre
  image: 
    name: amazon/aws-cli
    entrypoint: [""]
  services:
    - docker:dind
  before_script:
    - amazon-linux-extras install docker
    - aws --version
    - docker --version
  script:
    - docker build -t $DOCKER_REGISTRY/$APP_NAME:latest .
    - aws ecr get-login-password | docker login --username AWS --password-stdin $DOCKER_REGISTRY > /dev/null 2>&1
    - docker push $DOCKER_REGISTRY/$APP_NAME:latest

deploy:
  extends: .terraform:deploy
  dependencies:
    - build

update-ecs-artifact:
  stage: .post
  image: 
    name: amazon/aws-cli
    entrypoint: [""]
  before_script:
    - aws --version
  script:
    - aws ecs update-service --cluster my-cluster --service my-first-service --region eu-west-1  --force-new-deployment
    - echo "delete batch untagged images"
    # - aws ecr describe-repositories --output text | awk '{print $5}' | egrep -v '^$' | while read line; do  repo=$(echo $line | sed -e  "s/arn:aws:ecr.*\///g") ; aws ecr list-images --repository-name $repo --filter tagStatus=UNTAGGED --query 'imageIds[*]' --output text | while read imageId; do aws ecr batch-delete-image --repository-name $repo --image-ids imageDigest=$imageId; done; done